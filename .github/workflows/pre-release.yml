name: Pre-release

on:
  push:
    branches:
      - "release/*.*.*"
      - "release/*.*.*-*.*"

jobs:
  generate-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set prerelease variable
        id: prerelease
        run: |
          if [[ "${GITHUB_REF#refs/heads/}" == *-* ]]; then
            echo "::set-output name=prerelease::true"
          else
            echo "::set-output name=prerelease::false"
          fi
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.prerelease.outputs.prerelease }}
          generate_release_notes: false
          draft: true
          fail_on_unmatched_files: true

      # - name: Build Changelog
      #   id: github_release
      #   uses: mikepenz/release-changelog-builder-action@v5
      #   with:
      #     fromTag: "0.4.0"
      #     toTag: "release/0.5.1-rc.2"
      #     mode: "COMMIT"
      #     # commitMode: "true"
      #     fetchViaCommits: "true"
      #     fetchReleaseInformation: "true"
      #     platform: "github"
      #     configurationJson: |
      #       {
      #         "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
      #         "pr_template": "- #{{TITLE}} (#{{NUMBER}})",
      #         "commit_template": "- #{{SUBJECT}} (#{{HASH}})",
      #         "categories": [
      #           {
      #               "title": "## üí¨ Other",
      #               "labels": ["other", "misc", "general", "uncategorized", "chore"],
      #               "exhaustive": true,
      #           },
      #           {
      #               "title": "## üì¶ Dependencies",
      #               "labels": ["dependencies", "dependency", "deps"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üêõ Bug Fixes",
      #               "labels": ["bug", "fix"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üöÄ Features",
      #               "labels": ["feature","enhancement","feat"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üìñ Documentation",
      #               "labels": ["documentation", "docs", "readme"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üß∞ Maintenance",
      #               "labels": ["maintenance", "refactor", "cleanup"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üöß Work in Progress",
      #               "labels": ["wip", "work in progress", "in progress", "in-progress"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üö® Breaking Changes",
      #               "labels": ["breaking", "breaking change", "breaking changes"],
      #               "exhaustive": true
      #           },
      #           {
      #               "title": "## üö® CI",
      #               "labels": ["ci", "github actions", "actions", "workflow", "workflows", "ci/cd"],
      #               "exhaustive": true
      #           }
      #         ],
      #         label_extractor: [
      #           {
      #             pattern: '^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\(.+\\))?(!)?: ([\\w ])+([\\s\\S]*)',
      #             target: '$1'
      #           }
      #         ]
      #       }

      # - name: Print Release Notes
      #   run: echo "${{ steps.github_release.outputs.changelog }}"
      # - name: "‚úèÔ∏è Generate release changelog"
      #   id: github_release
      #   uses: janheinrichmerker/action-github-changelog-generator@v2.3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     sinceTag: 0.5.0
      #     dueTag: 0.5.1-rc.1
      # - name: Print Release Notes
      #   run: echo "${{ steps.github_release.outputs.changelog }}"


      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     prerelease: ${{ steps.prerelease.outputs.prerelease }}
      #     body: ${{ steps.release_notes.outputs.clean_changelog }}
      #     draft: true
      #     fail_on_unmatched_files: true