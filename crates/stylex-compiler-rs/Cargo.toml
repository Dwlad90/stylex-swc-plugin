[package]
name = "stylex_compiler_rs"
version = "0.1.0"
edition = "2021"
license.workspace = true
repository.workspace = true


[lib]
crate-type = ["cdylib", "rlib"]
doctest = false


[dependencies]
serde.workspace = true
swc_core = { workspace = true, features = [
  "common",
  "ecma_plugin_transform",
  "ecma_utils",
  "ecma_parser",
  "ecma_codegen",
  "css_codegen",
  "css_visit",
  "css_parser",
  "css_ast",
] }

lazy_static.workspace = true
serde_json.workspace = true
regex.workspace = true
dashmap.workspace = true
indexmap.workspace = true
derive_more.workspace = true
convert_case.workspace = true
murmur2.workspace = true
radix_fmt.workspace = true
phf = { workspace = true, features = ["macros"] }
once_cell.workspace = true
colored.workspace = true
node-resolve.workspace = true
path-clean.workspace = true
cssparser.workspace = true
anyhow.workspace = true
log.workspace = true
pretty_env_logger.workspace = true
color-backtrace.workspace = true
ctor.workspace = true
env_logger.workspace = true

swc_compiler_base = { version = "*", features = ["node"] }
swc_ecma_parser = { version = "*", features = ["verify"] }

stylex_swc_plugin = { path = "../stylex-swc-plugin" }
napi = "2"
napi-derive = "2"


[dev-dependencies]
swc_core = { workspace = true, features = ["testing_transform", "ecma_parser"] }
testing.workspace = true
insta = { workspace = true, features = ["yaml"] }
napi-build = "2"


# .cargo/config defines few alias to build plugin.
# cargo build-wasi generates wasm-wasi32 binary
# cargo build-wasm32 generates wasm32-unknown-unknown binary.

# wasm-pack build --target web --dev -d dist --out-name index


[build-dependencies]
napi-build = "2"
