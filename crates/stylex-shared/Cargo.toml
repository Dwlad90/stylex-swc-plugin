[package]
name = "stylex_shared"
version = "0.6.2-rc.1"
edition = "2021"
rust-version = "1.82.0"
description = "Shared SWC tranformer for StyleX"
license = "MIT"
repository = "https://github.com/Dwlad90/stylex-swc-plugin.git"

[lib]
## With this config build fails with error: `linking with `cc` failed: exit status: 1`
# crate-type = ["cdylib", "rlib"]
doctest = false

[dependencies]
serde.workspace = true
swc_core = { workspace = true, features = [
  "common",
  "ecma_plugin_transform",
  "ecma_utils",
  "ecma_parser",
  "ecma_codegen",
  "css_codegen",
  "css_visit",
  "css_parser",
  "css_ast",
] }

lazy_static.workspace = true
serde_json.workspace = true
regex.workspace = true
indexmap.workspace = true
derive_more.workspace = true
murmur2.workspace = true
radix_fmt.workspace = true
phf = { workspace = true, features = ["macros"] }
once_cell.workspace = true
colored.workspace = true
node-resolve.workspace = true
path-clean.workspace = true
cssparser.workspace = true
anyhow.workspace = true
log.workspace = true
pretty_env_logger.workspace = true
color-backtrace.workspace = true
ctor.workspace = true
env_logger.workspace = true
rustc-hash.workspace = true

swc_ecma_parser = { version = "*", features = ["verify"] }
swc_compiler_base = { version = "*", features = ["node"] }

stylex_path_resolver = { path = "../stylex-path-resolver" }


[dev-dependencies]
swc_core = { workspace = true, features = [
  "testing_transform",
  "ecma_parser",
  'ecma_utils',
] }
testing.workspace = true
insta = { workspace = true, features = ["yaml"] }


# .cargo/config defines few alias to build plugin.
# cargo build-wasi generates wasm-wasi32 binary
# cargo build-wasm32 generates wasm32-unknown-unknown binary.

# wasm-pack build --target web --dev -d dist --out-name index
